version: '3.8'

services:
  bot:
    build: .
    container_name: telegram-bot
    restart: unless-stopped
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - DATABASE_URL=postgresql://botuser:botpass@db:5432/botdb
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SUPPORT_BOT_TOKEN=${SUPPORT_BOT_TOKEN}
      - SUPPORT_CHAT_ID=${SUPPORT_CHAT_ID}
      - TELEGRAM_PROVIDER_TOKEN=${TELEGRAM_PROVIDER_TOKEN}
    depends_on:
      - db
    volumes:
      - ./config:/app/config
      - ./locales:/app/locales
    command: python -m bot.main --locale en

  support-bot:
    build: .
    container_name: telegram-support-bot
    restart: unless-stopped
    environment:
      - SUPPORT_BOT_TOKEN=${SUPPORT_BOT_TOKEN}
      - SUPPORT_CHAT_ID=${SUPPORT_CHAT_ID}
      - DATABASE_URL=postgresql://botuser:botpass@db:5432/botdb
    depends_on:
      - db
    volumes:
      - ./config:/app/config
      - ./locales:/app/locales
    command: python -m bot.support_bot
    profiles:
      - support

  db:
    image: postgres:15-alpine
    container_name: telegram-bot-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=botdb
      - POSTGRES_USER=botuser
      - POSTGRES_PASSWORD=botpass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  adminer:
    image: adminer
    container_name: telegram-bot-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    profiles:
      - admin

volumes:
  postgres_data: